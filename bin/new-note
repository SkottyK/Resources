#!/usr/bin/python

import datetime
import os
import re

currentTime = datetime.datetime.now()
notes_directory = "/Users/Scott/Documents/notes/"
notes_filename = "scratchwork"
class_directory = "/Users/Scott/now/"

# Course numbers
classes = [
    "15410",
    "15313",
    "15300",
    "70391",
    "33104"
]
# Course numbers serve as keys to dictionary that contains course names/descriptions
class_names = {
    "15410": "Operating System Design and Implementation",
    "15313": "Foundations of Software Engineering",
    "15300": "Research and Innovation in Computer Science",
    "70391": "Finance",
    "33104": "Experimental Physics Laboratory"
}

# Define days of the week
SUNDAY = 1
MONDAY = 2
TUESDAY = 3
WEDNESDAY = 4
THURSDAY = 5
FRIDAY = 6
SATURDAY = 1

def getSubject(displayName = ""):
    import wx
    app = wx.App()
    if displayName == "":
        displayName = "Today's Topic:"
    else:
        displayName = "%s\nToday's class is on:" % displayName
    dlg = wx.TextEntryDialog(None, displayName,'Introduction')
    if dlg.ShowModal() == wx.ID_OK:
        entered_text = dlg.GetValue()
        dlg.Destroy()
        return entered_text
    app.exit(0)

def openMarkdownFile(filename, text):
    mdfilename = filename + ".md"
    htmlfilename = filename + ".html"
    os.system('echo \'%s\' >> %s' % (text, mdfilename))
    os.system('open -a %s %s' % (editor_name, mdfilename))

def getCurrentClass():
    logical_day = currentTime.isoweekday() % 6 # Sunday -> 0 Monday -> 1
    minute_of_day = currentTime.hour * 60 + currentTime.minute

    if logical_day in [1, 3, 5]:
        if minute_of_day < 10 * 60 + 20:
            if (minute_of_day > 9 * 60 + 20 and logical_day == 3):
                return "15214"
        elif (minute_of_day < 11 * 60 + 20):
            return "85211"
        elif (minute_of_day < 13 * 60 + 20):
            return "15210"
        elif (logical_day != 5):
            if (minute_of_day < 14 * 60 + 50):
                return "70440"
            elif (minute_of_day < 16 * 60 + 20):
                return "16865"
            elif (minute_of_day < 21 * 60 + 20 and minute_of_day > 18 * 60 + 20) and logical_day == 3:
                return "67306"
    elif logical_day in [2,4]:
        if (minute_of_day > 14 * 60 + 50 and minute_of_day < 16 * 60 + 20):
            return "15214"
        elif (minute_of_day > 9 * 60 + 20 and minute_of_day < 10 * 60 + 30 and logical_day == 2):
            return "15210"
    return None

currentClass = getCurrentClass()
initial_text = ""
if currentClass != None and currentClass in classes:
    subject = getSubject(currentClass)
    initial_text += "%s \n" % subject
    initial_text += "".join(["=" for i in range(len(subject))]) + "\n"
    initial_text += "Course: %s\n" % currentClass
    initial_text += "Author: Scott Krulcik\n"
    initial_text += "Date: %s\n\n" % currentTime.strftime("%m/%d/%y")
    subject_filename = re.sub(r"\s+", "", subject)
    file_name = class_directory + currentClass + "/notes/" + subject_filename
else:
    # Not currently in a class, fall back to general note taking
    file_name = notes_directory + notes_filename

openMarkdownFile(file_name, initial_text)





